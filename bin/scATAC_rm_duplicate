#!/usr/bin/env bash

# PART I check weather softwares installed
command -v java >/dev/null 2>&1 || { echo >&2 "scATAC_rm_duplicate requires java but it is not installed. Aborting."; exit 1; }
command -v samtools >/dev/null 2>&1 || { echo >&2 "scATAC_rm_duplicate requires samtools but it is not installed. Aborting."; exit 1; }

# PART II usage info
usage(){
cat << EOF

Program: scATAC_rm_duplicate (remove PCR duplication in scATAC pipeline)
Version: 06.10.2016
Contact: Rongxin Fang <r3fang@ucsd.edu>
Ren Lab: http://bioinformatics-renlab.ucsd.edu/rentrac/

usage: ${0##*/} [-h] [-d DIRECTORY] [-p MarkDuplicates.jar] 

Example:
scATAC_rm_duplicate -d tmp/ -p Picard/MarkDuplicates.jar -

Options:    
	-h, --help                  show this help message and exit.
	-d  DIRECTORY               directory that contains sam file to remove PCR duplication.
	-p  MARK_DUPLICATE          path to picard MarkDuplicates.jar [MarkDuplicates.jar].
EOF
} 

while getopts ":d:p:" opt;
do
	case "$opt" in
		d) TARGET_DIR=$OPTARG;;
		p) MARK_DUPLICATE=$OPTARG;;
		\?) usage
			echo "input error"
			exit 1
			;;
	esac
done

if [ $# -lt 4 ] ; then
   usage
   echo "error: too few arguments"
   exit 1
fi

if [ ! -d "$TARGET_DIR" ]; then
  usage
  echo "error: '$TARGET_DIR' not exists.";
  exit 1
fi

if [ ! -f $MARK_DUPLICATE ]; then
	usage
    echo "error: '$MARK_DUPLICATE' not exists.";
	exit 1
fi

for line in `ls $TARGET_DIR | grep .sam`
do
	barcode="${line%.*}"
	samtools view -bS $TARGET_DIR/$line | samtools sort - $TARGET_DIR/$barcode.sorted &
done
wait

for line in `ls $TARGET_DIR | grep .sam`
do
	barcode="${line%.*}"
	java -Xmx2G -jar $MARK_DUPLICATE INPUT=$TARGET_DIR/$barcode.sorted.bam OUTPUT=$TARGET_DIR/$barcode.sorted.filtered.bam ASSUME_SORTED=true REMOVE_DUPLICATES=true VALIDATION_STRINGENCY=LENIENT METRICS_FILE=$TARGET_DIR/metrics.$barcode.txt TMP_DIR=$TARGET_DIR/$barcode\_tmp &
done
wait

rm $PREFIX\_tmp/cells/*.sorted.bam
rm -r $PREFIX\_tmp/cells/*_tmp


